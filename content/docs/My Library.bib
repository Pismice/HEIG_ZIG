@misc{AllocatorsZigGuide2024,
  title = {Allocators {\textbar} Zig.Guide},
  year = {2024},
  month = apr,
  urldate = {2024-05-31},
  abstract = {The Zig standard library provides a pattern for allocating memory, which allows},
  howpublished = {https://zig.guide/standard-library/allocators/},
  langid = {english}
}

@misc{AsyncAwaitSuspend,
  title = {Async/Await/Suspend/Resume {$\cdot$} {{Issue}} \#6025 {$\cdot$} Ziglang/Zig},
  journal = {GitHub},
  urldate = {2024-05-31},
  abstract = {This is a sub-task of \#89.},
  howpublished = {https://github.com/ziglang/zig/issues/6025},
  langid = {english}
}

@misc{bakerLewissbakerCppcoro2024,
  title = {Lewissbaker/Cppcoro},
  author = {Baker, Lewis},
  year = {2024},
  month = may,
  urldate = {2024-05-31},
  abstract = {A library of C++ coroutine abstractions for the coroutines TS},
  copyright = {MIT},
  keywords = {async,async-await,asynchronous-programming,asyncio,clang,coroutines,coroutines-ts,cplusplus,cpp,linux,msvc,windows}
}

@misc{boehlandJolbyObzig2023,
  title = {Jolby/Ob-Zig.El},
  author = {Boehland, Joel},
  year = {2023},
  month = dec,
  urldate = {2024-03-02},
  abstract = {Org babel bindings for the Zig language}
}

@misc{cinchblueWhatDifferenceAsymmetric2017,
  type = {Forum Post},
  title = {What Is the Difference between Asymmetric and Symmetric Coroutines?},
  author = {CinchBlue},
  year = {2017},
  month = jan,
  journal = {Stack Overflow},
  urldate = {2024-05-31}
}

@misc{ComptimeZigGuide2024,
  title = {Comptime {\textbar} Zig.Guide},
  year = {2024},
  month = mar,
  urldate = {2024-03-17},
  abstract = {Blocks of code may be forcibly executed at compile time using the},
  howpublished = {https://zig.guide/language-basics/comptime},
  langid = {english}
}

@misc{CrossCompilationZig2024,
  title = {Cross Compilation {\textbar} Zig.Guide},
  year = {2024},
  month = mar,
  urldate = {2024-03-05},
  abstract = {By default, Zig will compile for your combination of CPU and OS. This can be},
  howpublished = {https://zig.guide/build-system/cross-compilation},
  langid = {english}
}

@misc{DesignOverviewLibuv,
  title = {Design Overview - Libuv Documentation},
  urldate = {2024-05-31},
  howpublished = {https://docs.libuv.org/en/v1.x/design.html\#the-i-o-loop}
}

@misc{DocumentationZigProgramming,
  title = {Documentation - {{The Zig Programming Language}}},
  urldate = {2024-03-02},
  howpublished = {https://ziglang.org/documentation/0.11.0/\#Introduction}
}

@article{FiberComputerScience2024,
  title = {Fiber (Computer Science)},
  year = {2024},
  month = may,
  journal = {Wikipedia},
  urldate = {2024-05-31},
  abstract = {In computer science, a fiber is a particularly lightweight thread of execution. Like threads, fibers share address space. However, fibers use cooperative multitasking while threads use preemptive multitasking. Threads often depend on the kernel's thread scheduler to preempt a busy thread and resume another thread; fibers yield themselves to run another fiber while executing.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1223783687}
}

@misc{GreenThreadExperiment,
  title = {Green {{Thread Experiment Results}} {$\cdot$} {{Issue}} \#2398 {$\cdot$} Dotnet/Runtimelab},
  journal = {GitHub},
  urldate = {2024-05-31},
  abstract = {Our goal with the green thread experiment was to understand the basic costs and benefits of introducing green threads to the .NET Runtime environment. Why green threads The .NET asynchronous progra...},
  howpublished = {https://github.com/dotnet/runtimelab/issues/2398},
  langid = {english}
}

@misc{HowPackageZig2024,
  title = {How to Package a Zig Source Module and How to Use It - {{Docs}}},
  year = {2024},
  month = mar,
  journal = {Ziggit},
  urldate = {2024-05-31},
  abstract = {How to package a Zig source module  In a zig source file, write public zig functions or types. In build.zig add a module for the zig source file. Create a build.zig.zon for the package, include all the source and build files in the path.  Example  file: src/lib.zig, public say function.  const std = @import("std");  pub fn say(what: []const u8) void \{     std.debug.print("\{s\}{\textbackslash}n", .\{what\}); \}   file build.zig, src/lib.zig becomes speak module.  const std = @import("std");  pub fn build(b: *std.Bu...},
  chapter = {Docs},
  howpublished = {https://ziggit.dev/t/how-to-package-a-zig-source-module-and-how-to-use-it/3457},
  langid = {english}
}

@misc{HowUseReact,
  title = {How Do {{I}} Use React with an Express Application? : R/Reactjs},
  urldate = {2024-05-31},
  howpublished = {https://www.reddit.com/r/reactjs/comments/16blsh3/how\_do\_i\_use\_react\_with\_an\_express\_application/}
}

@misc{HyperlinksOrgMode,
  title = {Hyperlinks ({{Org Mode Compact Guide}})},
  urldate = {2024-05-31},
  howpublished = {https://orgmode.org/guide/Hyperlinks.html}
}

@misc{HyperlinksOrgModea,
  title = {Hyperlinks ({{Org Mode Compact Guide}})},
  urldate = {2024-05-31},
  howpublished = {https://orgmode.org/guide/Hyperlinks.html}
}

@misc{HyperlinksOrgModeb,
  title = {Hyperlinks ({{Org Mode Compact Guide}})},
  urldate = {2024-05-31},
  howpublished = {https://orgmode.org/guide/Hyperlinks.html}
}

@misc{HyperlinksOrgModec,
  title = {Hyperlinks ({{Org Mode Compact Guide}})},
  urldate = {2024-05-31},
  howpublished = {https://orgmode.org/guide/Hyperlinks.html}
}

@misc{jamboreeAnswerHowStackless2015,
  title = {Answer to "{{How}} Do Stackless Coroutines Differ from Stackful Coroutines?"},
  shorttitle = {Answer to "{{How}} Do Stackless Coroutines Differ from Stackful Coroutines?},
  author = {Jamboree},
  year = {2015},
  month = mar,
  journal = {Stack Overflow},
  urldate = {2024-05-31}
}

@misc{LearningZigHeap,
  title = {Learning {{Zig}} - {{Heap Memory}} \& {{Allocators}}},
  urldate = {2024-03-03},
  howpublished = {https://www.openmymind.net/learning\_zig/heap\_memory/}
}

@misc{LibuvDocsSrc,
  title = {Libuv/Docs/Src/Guide/Basics.Rst at v1.x {$\cdot$} Libuv/Libuv},
  journal = {GitHub},
  urldate = {2024-05-31},
  abstract = {Cross-platform asynchronous I/O. Contribute to libuv/libuv development by creating an account on GitHub.},
  howpublished = {https://github.com/libuv/libuv/blob/v1.x/docs/src/guide/basics.rst},
  langid = {english}
}

@misc{lynchSimpleExampleCalling2023,
  title = {A {{Simple Example}} of {{Calling}} a {{C Library}} from {{Zig}}},
  author = {Lynch, Michael},
  year = {2023},
  month = nov,
  urldate = {2024-05-31},
  abstract = {Zig is a new, independently developed low-level programming language. It's a modern reimagining of C that attempts to retain all of C's performance benefits while also taking advantage of improvements in tooling and language design from the last 30 years. Because Zig is designed to replace C, one of the first-class features is that you can call into C libraries from a Zig application. I couldn't find any simple examples demonstrating Zig's C interop functionality, so I decided to write my own.},
  howpublished = {https://mtlynch.io/notes/zig-call-c-simple/},
  langid = {english}
}

@misc{MeasureElapsedTime,
  title = {Measure the Elapsed Time between Two Code Sections - {{Zig}} Cookbook},
  urldate = {2024-03-17},
  howpublished = {https://zigcc.github.io/zig-cookbook/03-01-elapsed-time.html}
}

@article{mouraRevisitingCoroutines2009,
  title = {Revisiting Coroutines},
  author = {Moura, Ana L{\'u}cia De and Ierusalimschy, Roberto},
  year = {2009},
  month = feb,
  journal = {ACM Transactions on Programming Languages and Systems},
  volume = {31},
  number = {2},
  pages = {1--31},
  issn = {0164-0925, 1558-4593},
  doi = {10.1145/1462166.1462167},
  urldate = {2024-05-31},
  abstract = {This article advocates the revival of coroutines as a convenient general control abstraction. After proposing a new classification of coroutines, we introduce the concept of full asymmetric coroutines and provide a precise definition for it through an operational semantics. We then demonstrate that full coroutines have an expressive power equivalent to one-shot continuations and one-shot delimited continuations. We also show that full asymmetric coroutines and one-shot delimited continuations have many similarities, and therefore present comparable benefits. Nevertheless, coroutines are easier implemented and understood, especially in the realm of procedural languages.},
  langid = {english},
  file = {/home/tetratrux/Zotero/storage/TG6PXYNT/Moura and Ierusalimschy - 2009 - Revisiting coroutines.pdf}
}

@misc{MultithreadingThereDifference,
  title = {Multithreading - {{Is}} There a Difference between Fibers, Coroutines and Green Threads and If That Is so What Is It? - {{Software Engineering Stack Exchange}}},
  urldate = {2024-05-31},
  howpublished = {https://softwareengineering.stackexchange.com/questions/254140/is-there-a-difference-between-fibers-coroutines-and-green-threads-and-if-that-i}
}

@misc{nieblerStructuredConcurrency2020,
  title = {Structured {{Concurrency}}},
  author = {Niebler, Eric},
  year = {2020},
  month = nov,
  journal = {Eric Niebler},
  urldate = {2024-05-31},
  abstract = {TL;DR: ``Structured concurrency'' refers to a way to structure async computations so that child operations are guaranteed to complete before their parents, just the way a function is guaranteed{\dots}},
  langid = {american}
}

@misc{nuloCatdevnullAwesomezig2024,
  title = {Catdevnull/Awesome-Zig},
  author = {Nulo},
  year = {2024},
  month = may,
  urldate = {2024-05-31},
  abstract = {A list of awesome projects related to Zig},
  copyright = {CC0-1.0},
  keywords = {awesome,awesome-list,zig,ziglang}
}

@misc{olkAnswerHowStackless2015,
  title = {Answer to "{{How}} Do Stackless Coroutines Differ from Stackful Coroutines?"},
  shorttitle = {Answer to "{{How}} Do Stackless Coroutines Differ from Stackful Coroutines?},
  author = {{olk}},
  year = {2015},
  month = mar,
  journal = {Stack Overflow},
  urldate = {2024-05-31}
}

@misc{OrgMode,
  title = {Org {{Mode}}},
  urldate = {2024-03-02},
  abstract = {Org-mode. Complex so you don't have to be. A versatile organisational system with immense capabilities.},
  howpublished = {https://orgmode.org},
  langid = {english}
}

@misc{OvenshBun2024,
  title = {Oven-Sh/Bun},
  year = {2024},
  month = mar,
  urldate = {2024-03-02},
  abstract = {Incredibly fast JavaScript runtime, bundler, test runner, and package manager -- all in one},
  howpublished = {Bun},
  keywords = {bun,bundler,javascript,javascriptcore,jsx,nodejs,npm,react,transpiler,typescript,zig,ziglang}
}

@misc{PismiceHEIG_ZIG,
  title = {Pismice/{{HEIG}}\_{{ZIG}}},
  urldate = {2024-03-19},
  howpublished = {https://github.com/Pismice/HEIG\_ZIG}
}

@misc{ProgrammerFriendlyAbstractionIo_uring,
  title = {A {{Programmer-Friendly I}}/{{O Abstraction Over}} Io\_uring and Kqueue},
  urldate = {2024-05-31},
  abstract = {The financial transactions database to power the next 30 years of Online Transaction Processing.},
  howpublished = {https://tigerbeetle.com/blog/a-friendly-abstraction-over-iouring-and-kqueue},
  langid = {english}
}

@misc{ProgrammingLua,
  title = {Programming in {{Lua}} : 9.1},
  urldate = {2024-05-31},
  howpublished = {https://www.lua.org/pil/9.1.html}
}

@misc{rHowStacklessCoroutines2015,
  type = {Forum Post},
  title = {How Do Stackless Coroutines Differ from Stackful Coroutines?},
  author = {R, Jason},
  year = {2015},
  month = mar,
  journal = {Stack Overflow},
  urldate = {2024-05-31}
}

@misc{SourceCodeBlocks,
  title = {C, {{C}}++, {{D Source Code Blocks}} in {{Org Mode}}},
  urldate = {2024-03-02},
  howpublished = {https://orgmode.org/worg//org-contrib/babel/languages/ob-doc-C.html}
}

@misc{ThreadingModelsJava2019,
  title = {Threading {{Models}} in {{Java}} {\textbar} {{Baeldung}}},
  year = {2019},
  month = sep,
  urldate = {2024-05-31},
  abstract = {A quick and practical overview of threading models in Java.},
  howpublished = {https://www.baeldung.com/java-threading-models},
  langid = {american}
}

@misc{ThreadsLibuvDocumentation,
  title = {Threads - Libuv Documentation},
  urldate = {2024-05-31},
  howpublished = {https://docs.libuv.org/en/v1.x/guide/threads.html}
}

@misc{trebbienAnswerWhatDifference2017,
  title = {Answer to "{{What}} Is the Difference between Asymmetric and Symmetric Coroutines?"},
  shorttitle = {Answer to "{{What}} Is the Difference between Asymmetric and Symmetric Coroutines?},
  author = {Trebbien, Daniel},
  year = {2017},
  month = feb,
  journal = {Stack Overflow},
  urldate = {2024-05-31}
}

@misc{UsingZigTranslateC2021,
  title = {Using {{Zig}} and {{Translate-C}} to Understand Weird {{C}} Code},
  year = {2021},
  month = oct,
  journal = {Zig NEWS},
  urldate = {2024-05-31},
  abstract = {@rep\_stosq\_void on Twitter posted this strange sample of C code, and I wanted to show my process of...},
  howpublished = {https://zig.news/sobeston/using-zig-and-translate-c-to-understand-weird-c-code-4f8},
  langid = {english}
}

@misc{WebServerHello2023,
  title = {Web Server `Hello World' Benchmark : {{Go}} vs {{Node}}.Js vs {{Nim}} vs {{Bun}} -- {{Daniel Lemire}}'s Blog},
  shorttitle = {Web Server `Hello World' Benchmark},
  year = {2023},
  month = oct,
  urldate = {2024-05-31},
  langid = {american}
}

@misc{WelcomeZigGuide2024,
  title = {Welcome {\textbar} Zig.Guide},
  year = {2024},
  month = jan,
  urldate = {2024-03-02},
  abstract = {Get started with the Zig programming language. Zig is a general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.},
  howpublished = {https://zig.guide/},
  langid = {english}
}

@misc{WhatAreYou2023,
  type = {Reddit {{Post}}},
  title = {What Are You Doing for Async?},
  year = {2023},
  month = oct,
  journal = {r/Zig},
  urldate = {2024-05-31},
  file = {/home/tetratrux/Zotero/storage/MP9C6H9P/what_are_you_doing_for_async.html}
}

@misc{WhatZigColorblind,
  title = {What Is {{Zig}}'s ``{{Colorblind}}'' {{Async}}/{{Await}}?},
  urldate = {2024-05-31},
  abstract = {An introduction to Zig's curious concurrent programming API.},
  howpublished = {https://kristoff.it/blog/zig-colorblind-async-await/},
  langid = {english}
}

@misc{xlrgAnswerWhatDifference2017,
  title = {Answer to "{{What}} Is the Difference between Asymmetric and Symmetric Coroutines?"},
  shorttitle = {Answer to "{{What}} Is the Difference between Asymmetric and Symmetric Coroutines?},
  author = {{xlrg}},
  year = {2017},
  month = apr,
  journal = {Stack Overflow},
  urldate = {2024-05-31}
}

@misc{ZigBits0x4,
  title = {Zig {{Bits}} 0x4: {{Building}} an {{HTTP}} Client/Server from Scratch - {{Orhun}}'s {{Blog}}},
  shorttitle = {Zig {{Bits}} 0x4},
  urldate = {2024-05-31},
  abstract = {FOSS {$\bullet$} Linux {$\bullet$} Programming},
  howpublished = {https://blog.orhun.dev},
  langid = {english}
}

@misc{ZiglangZig2024,
  title = {Ziglang/Zig},
  year = {2024},
  month = mar,
  urldate = {2024-03-02},
  abstract = {General-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.},
  howpublished = {Zig Programming Language},
  keywords = {compiler,language,zig}
}

@misc{ZigMetaprogrammingGamedev,
  title = {Zig {{Metaprogramming}} - {{Gamedev Guide}}},
  urldate = {2024-03-19},
  howpublished = {https://ikrima.dev/dev-notes/zig/zig-metaprogramming/}
}

@misc{ZigNamingConventions,
  title = {Zig Naming Conventions},
  urldate = {2024-05-31},
  howpublished = {https://nathancraddock.com/blog/zig-naming-conventions/}
}

@misc{ZigPackageManager2023,
  title = {Zig {{Package Manager}} - {{WTF}} Is {{Zon}}},
  year = {2023},
  month = jun,
  journal = {Zig NEWS},
  urldate = {2024-05-31},
  abstract = {The power hack and complexity of Package Manager in Zig     Ed Yu (@edyu on Github and @edyu on...},
  howpublished = {https://zig.news/edyu/zig-package-manager-wtf-is-zon-558e},
  langid = {english}
}

@misc{ZigPackageManager2023a,
  title = {Zig {{Package Manager}} 2 - {{WTF}} Is {{Build}}.{{Zig}}.{{Zon}} and {{Build}}.{{Zig}} (0.11.0 {{Update}})},
  year = {2023},
  month = oct,
  journal = {Zig NEWS},
  urldate = {2024-05-31},
  abstract = {The power hack and complexity of Package Manager in Zig 0.11.0     Ed Yu (@edyu on Github and @edyu...},
  howpublished = {https://zig.news/edyu/zig-package-manager-wtf-is-zon-2-0110-update-1jo3},
  langid = {english}
}

@misc{ZigzapZap2024,
  title = {Zigzap/Zap},
  year = {2024},
  month = may,
  urldate = {2024-05-31},
  abstract = {blazingly fast backends in zig},
  copyright = {MIT},
  howpublished = {ZAP},
  keywords = {api,blazingly,fast,http,rest,zig}
}
