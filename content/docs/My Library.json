[
  {"id":"AllocatorsZigGuide2024","abstract":"The Zig standard library provides a pattern for allocating memory, which allows","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"AllocatorsZigGuide2024","issued":{"date-parts":[["2024",4,7]]},"language":"en","title":"Allocators | zig.guide","type":"webpage","URL":"https://zig.guide/standard-library/allocators/"},
  {"id":"AsyncAwaitSuspend","abstract":"This is a sub-task of #89.","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"AsyncAwaitSuspend","container-title":"GitHub","language":"en","title":"async/await/suspend/resume · Issue #6025 · ziglang/zig","type":"webpage","URL":"https://github.com/ziglang/zig/issues/6025"},
  {"id":"bakerLewissbakerCppcoro2024","abstract":"A library of C++ coroutine abstractions for the coroutines TS","accessed":{"date-parts":[["2024",5,31]]},"author":[{"family":"Baker","given":"Lewis"}],"citation-key":"bakerLewissbakerCppcoro2024","genre":"C++","issued":{"date-parts":[["2024",5,28]]},"license":"MIT","original-date":{"date-parts":[["2017",3,20]]},"source":"GitHub","title":"lewissbaker/cppcoro","type":"software","URL":"https://github.com/lewissbaker/cppcoro"},
  {"id":"boehlandJolbyObzig2023","abstract":"Org babel bindings for the Zig language","accessed":{"date-parts":[["2024",3,2]]},"author":[{"family":"Boehland","given":"Joel"}],"citation-key":"boehlandJolbyObzig2023","issued":{"date-parts":[["2023",12,22]]},"original-date":{"date-parts":[["2021",8,26]]},"title":"Jolby/ob-zig.el","type":"software","URL":"https://github.com/jolby/ob-zig.el"},
  {"id":"cinchblueWhatDifferenceAsymmetric2017","accessed":{"date-parts":[["2024",5,31]]},"author":[{"family":"CinchBlue","given":""}],"citation-key":"cinchblueWhatDifferenceAsymmetric2017","container-title":"Stack Overflow","genre":"Forum post","issued":{"date-parts":[["2017",1,27]]},"title":"What is the difference between asymmetric and symmetric coroutines?","type":"post","URL":"https://stackoverflow.com/q/41891989"},
  {"id":"ComptimeZigGuide2024","abstract":"Blocks of code may be forcibly executed at compile time using the","accessed":{"date-parts":[["2024",3,17]]},"citation-key":"ComptimeZigGuide2024","issued":{"date-parts":[["2024",3,2]]},"language":"english","title":"Comptime | zig.guide","type":"webpage","URL":"https://zig.guide/language-basics/comptime"},
  {"id":"CrossCompilationZig2024","abstract":"By default, Zig will compile for your combination of CPU and OS. This can be","accessed":{"date-parts":[["2024",3,5]]},"citation-key":"CrossCompilationZig2024","issued":{"date-parts":[["2024",3,2]]},"language":"english","title":"Cross compilation | zig.guide","type":"webpage","URL":"https://zig.guide/build-system/cross-compilation"},
  {"id":"DesignOverviewLibuv","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"DesignOverviewLibuv","title":"Design overview - libuv documentation","type":"webpage","URL":"https://docs.libuv.org/en/v1.x/design.html#the-i-o-loop"},
  {"id":"DocumentationZigProgramming","accessed":{"date-parts":[["2024",3,2]]},"citation-key":"DocumentationZigProgramming","title":"Documentation - The Zig Programming Language","type":"webpage","URL":"https://ziglang.org/documentation/0.11.0/#Introduction"},
  {"id":"FiberComputerScience2024","abstract":"In computer science, a fiber is a particularly lightweight thread of execution.\nLike threads, fibers share address space. However, fibers use cooperative multitasking while threads use preemptive multitasking. Threads often depend on the kernel's thread scheduler to preempt a busy thread and resume another thread; fibers yield themselves to run another fiber while executing.","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"FiberComputerScience2024","container-title":"Wikipedia","issued":{"date-parts":[["2024",5,14]]},"language":"en","license":"Creative Commons Attribution-ShareAlike License","note":"Page Version ID: 1223783687","source":"Wikipedia","title":"Fiber (computer science)","type":"entry-encyclopedia","URL":"https://en.wikipedia.org/w/index.php?title=Fiber_(computer_science)&oldid=1223783687"},
  {"id":"GreenThreadExperiment","abstract":"Our goal with the green thread experiment was to understand the basic costs and benefits of introducing green threads to the .NET Runtime environment. Why green threads The .NET asynchronous progra...","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"GreenThreadExperiment","container-title":"GitHub","language":"en","title":"Green Thread Experiment Results · Issue #2398 · dotnet/runtimelab","type":"webpage","URL":"https://github.com/dotnet/runtimelab/issues/2398"},
  {"id":"HowPackageZig2024","abstract":"How to package a Zig source module  In a zig source file, write public zig functions or types. In build.zig add a module for the zig source file. Create a build.zig.zon for the package, include all the source and build files in the path.  Example  file: src/lib.zig, public say function.  const std = @import(\"std\");  pub fn say(what: []const u8) void {     std.debug.print(\"{s}\\n\", .{what}); }   file build.zig, src/lib.zig becomes speak module.  const std = @import(\"std\");  pub fn build(b: *std.Bu...","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"HowPackageZig2024","container-title":"Ziggit","issued":{"date-parts":[["2024",3,4]]},"language":"en","section":"Docs","title":"How to package a zig source module and how to use it - Docs","type":"webpage","URL":"https://ziggit.dev/t/how-to-package-a-zig-source-module-and-how-to-use-it/3457"},
  {"id":"HowUseReact","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"HowUseReact","title":"how do I use react with an express application? : r/reactjs","type":"webpage","URL":"https://www.reddit.com/r/reactjs/comments/16blsh3/how_do_i_use_react_with_an_express_application/"},
  {"id":"HyperlinksOrgMode","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"HyperlinksOrgMode","title":"Hyperlinks (Org Mode Compact Guide)","type":"webpage","URL":"https://orgmode.org/guide/Hyperlinks.html"},
  {"id":"HyperlinksOrgModea","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"HyperlinksOrgModea","title":"Hyperlinks (Org Mode Compact Guide)","type":"webpage","URL":"https://orgmode.org/guide/Hyperlinks.html"},
  {"id":"HyperlinksOrgModeb","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"HyperlinksOrgModeb","title":"Hyperlinks (Org Mode Compact Guide)","type":"webpage","URL":"https://orgmode.org/guide/Hyperlinks.html"},
  {"id":"HyperlinksOrgModec","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"HyperlinksOrgModec","title":"Hyperlinks (Org Mode Compact Guide)","type":"webpage","URL":"https://orgmode.org/guide/Hyperlinks.html"},
  {"id":"jamboreeAnswerHowStackless2015","accessed":{"date-parts":[["2024",5,31]]},"author":[{"family":"Jamboree","given":""}],"citation-key":"jamboreeAnswerHowStackless2015","container-title":"Stack Overflow","issued":{"date-parts":[["2015",3,11]]},"title":"Answer to \"How do stackless coroutines differ from stackful coroutines?\"","title-short":"Answer to \"How do stackless coroutines differ from stackful coroutines?","type":"post","URL":"https://stackoverflow.com/a/28989543"},
  {"id":"LearningZigHeap","accessed":{"date-parts":[["2024",3,3]]},"citation-key":"LearningZigHeap","title":"Learning Zig - Heap Memory & Allocators","type":"webpage","URL":"https://www.openmymind.net/learning_zig/heap_memory/"},
  {"id":"LibuvDocsSrc","abstract":"Cross-platform asynchronous I/O. Contribute to libuv/libuv development by creating an account on GitHub.","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"LibuvDocsSrc","container-title":"GitHub","language":"en","title":"libuv/docs/src/guide/basics.rst at v1.x · libuv/libuv","type":"webpage","URL":"https://github.com/libuv/libuv/blob/v1.x/docs/src/guide/basics.rst"},
  {"id":"lynchSimpleExampleCalling2023","abstract":"Zig is a new, independently developed low-level programming language. It’s a modern reimagining of C that attempts to retain all of C’s performance benefits while also taking advantage of improvements in tooling and language design from the last 30 years.\nBecause Zig is designed to replace C, one of the first-class features is that you can call into C libraries from a Zig application. I couldn’t find any simple examples demonstrating Zig’s C interop functionality, so I decided to write my own.","accessed":{"date-parts":[["2024",5,31]]},"author":[{"family":"Lynch","given":"Michael"}],"citation-key":"lynchSimpleExampleCalling2023","issued":{"date-parts":[["2023",11,19]]},"language":"en","title":"A Simple Example of Calling a C Library from Zig","type":"webpage","URL":"https://mtlynch.io/notes/zig-call-c-simple/"},
  {"id":"MeasureElapsedTime","accessed":{"date-parts":[["2024",3,17]]},"citation-key":"MeasureElapsedTime","title":"Measure the elapsed time between two code sections - Zig cookbook","type":"webpage","URL":"https://zigcc.github.io/zig-cookbook/03-01-elapsed-time.html"},
  {"id":"mouraRevisitingCoroutines2009","abstract":"This article advocates the revival of coroutines as a convenient general control abstraction. After proposing a new classification of coroutines, we introduce the concept of full asymmetric coroutines and provide a precise definition for it through an operational semantics. We then demonstrate that full coroutines have an expressive power equivalent to one-shot continuations and one-shot delimited continuations. We also show that full asymmetric coroutines and one-shot delimited continuations have many similarities, and therefore present comparable benefits. Nevertheless, coroutines are easier implemented and understood, especially in the realm of procedural languages.","accessed":{"date-parts":[["2024",5,31]]},"author":[{"family":"Moura","given":"Ana Lúcia De"},{"family":"Ierusalimschy","given":"Roberto"}],"citation-key":"mouraRevisitingCoroutines2009","container-title":"ACM Transactions on Programming Languages and Systems","container-title-short":"ACM Trans. Program. Lang. Syst.","DOI":"10.1145/1462166.1462167","ISSN":"0164-0925, 1558-4593","issue":"2","issued":{"date-parts":[["2009",2]]},"language":"en","page":"1-31","source":"DOI.org (Crossref)","title":"Revisiting coroutines","type":"article-journal","URL":"https://dl.acm.org/doi/10.1145/1462166.1462167","volume":"31"},
  {"id":"MultithreadingThereDifference","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"MultithreadingThereDifference","title":"multithreading - Is there a difference between fibers, coroutines and green threads and if that is so what is it? - Software Engineering Stack Exchange","type":"webpage","URL":"https://softwareengineering.stackexchange.com/questions/254140/is-there-a-difference-between-fibers-coroutines-and-green-threads-and-if-that-i"},
  {"id":"nieblerStructuredConcurrency2020","abstract":"TL;DR: “Structured concurrency” refers to a way to structure async computations so that child operations are guaranteed to complete before their parents, just the way a function is guaranteed…","accessed":{"date-parts":[["2024",5,31]]},"author":[{"family":"Niebler","given":"Eric"}],"citation-key":"nieblerStructuredConcurrency2020","container-title":"Eric Niebler","issued":{"date-parts":[["2020",11,9]]},"language":"en-US","title":"Structured Concurrency","type":"post-weblog","URL":"https://ericniebler.com/2020/11/08/structured-concurrency/"},
  {"id":"nuloCatdevnullAwesomezig2024","abstract":"A list of awesome projects related to Zig","accessed":{"date-parts":[["2024",5,31]]},"author":[{"family":"Nulo","given":""}],"citation-key":"nuloCatdevnullAwesomezig2024","issued":{"date-parts":[["2024",5,31]]},"license":"CC0-1.0","original-date":{"date-parts":[["2021",8,18]]},"source":"GitHub","title":"catdevnull/awesome-zig","type":"software","URL":"https://github.com/catdevnull/awesome-zig"},
  {"id":"olkAnswerHowStackless2015","accessed":{"date-parts":[["2024",5,31]]},"author":[{"family":"olk","given":""}],"citation-key":"olkAnswerHowStackless2015","container-title":"Stack Overflow","issued":{"date-parts":[["2015",3,12]]},"title":"Answer to \"How do stackless coroutines differ from stackful coroutines?\"","title-short":"Answer to \"How do stackless coroutines differ from stackful coroutines?","type":"post","URL":"https://stackoverflow.com/a/29007216"},
  {"id":"OrgMode","abstract":"Org-mode. Complex so you don't have to be. A versatile organisational system with immense capabilities.","accessed":{"date-parts":[["2024",3,2]]},"citation-key":"OrgMode","language":"english","title":"Org Mode","type":"webpage","URL":"https://orgmode.org"},
  {"id":"OvenshBun2024","abstract":"Incredibly fast JavaScript runtime, bundler, test runner, and package manager – all in one","accessed":{"date-parts":[["2024",3,2]]},"citation-key":"OvenshBun2024","issued":{"date-parts":[["2024",3,2]]},"original-date":{"date-parts":[["2021",4,14]]},"publisher":"Bun","title":"Oven-sh/bun","type":"software","URL":"https://github.com/oven-sh/bun"},
  {"id":"PismiceHEIG_ZIG","accessed":{"date-parts":[["2024",3,19]]},"citation-key":"PismiceHEIG_ZIG","title":"Pismice/HEIG_ZIG","type":"webpage","URL":"https://github.com/Pismice/HEIG_ZIG"},
  {"id":"ProgrammerFriendlyAbstractionIo_uring","abstract":"The financial transactions database to power the next 30 years of Online Transaction Processing.","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"ProgrammerFriendlyAbstractionIo_uring","language":"en","title":"A Programmer-Friendly I/O Abstraction Over io_uring and kqueue","type":"webpage","URL":"https://tigerbeetle.com/blog/a-friendly-abstraction-over-iouring-and-kqueue"},
  {"id":"ProgrammingLua","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"ProgrammingLua","title":"Programming in Lua : 9.1","type":"webpage","URL":"https://www.lua.org/pil/9.1.html"},
  {"id":"rHowStacklessCoroutines2015","accessed":{"date-parts":[["2024",5,31]]},"author":[{"family":"R","given":"Jason"}],"citation-key":"rHowStacklessCoroutines2015","container-title":"Stack Overflow","genre":"Forum post","issued":{"date-parts":[["2015",3,11]]},"title":"How do stackless coroutines differ from stackful coroutines?","type":"post","URL":"https://stackoverflow.com/q/28977302"},
  {"id":"SourceCodeBlocks","accessed":{"date-parts":[["2024",3,2]]},"citation-key":"SourceCodeBlocks","title":"C, C++, D Source Code Blocks in Org Mode","type":"webpage","URL":"https://orgmode.org/worg//org-contrib/babel/languages/ob-doc-C.html"},
  {"id":"ThreadingModelsJava2019","abstract":"A quick and practical overview of threading models in Java.","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"ThreadingModelsJava2019","issued":{"date-parts":[["2019",9,30]]},"language":"en-US","title":"Threading Models in Java | Baeldung","type":"webpage","URL":"https://www.baeldung.com/java-threading-models"},
  {"id":"ThreadsLibuvDocumentation","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"ThreadsLibuvDocumentation","title":"Threads - libuv documentation","type":"webpage","URL":"https://docs.libuv.org/en/v1.x/guide/threads.html"},
  {"id":"trebbienAnswerWhatDifference2017","accessed":{"date-parts":[["2024",5,31]]},"author":[{"family":"Trebbien","given":"Daniel"}],"citation-key":"trebbienAnswerWhatDifference2017","container-title":"Stack Overflow","issued":{"date-parts":[["2017",2,4]]},"title":"Answer to \"What is the difference between asymmetric and symmetric coroutines?\"","title-short":"Answer to \"What is the difference between asymmetric and symmetric coroutines?","type":"post","URL":"https://stackoverflow.com/a/42042904"},
  {"id":"UsingZigTranslateC2021","abstract":"@rep_stosq_void on Twitter posted this strange sample of C code, and I wanted to show my process of...","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"UsingZigTranslateC2021","container-title":"Zig NEWS","issued":{"date-parts":[["2021",10,9]]},"language":"en","title":"Using Zig and Translate-C to understand weird C code","type":"webpage","URL":"https://zig.news/sobeston/using-zig-and-translate-c-to-understand-weird-c-code-4f8"},
  {"id":"WebServerHello2023","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"WebServerHello2023","issued":{"date-parts":[["2023",10,7]]},"language":"en-US","title":"Web server ‘hello world’ benchmark : Go vs Node.js vs Nim vs Bun – Daniel Lemire's blog","title-short":"Web server ‘hello world’ benchmark","type":"post-weblog","URL":"https://lemire.me/blog/2023/10/07/web-server-hello-world-benchmark-go-vs-node-js-vs-nim-vs-bun/"},
  {"id":"WelcomeZigGuide2024","abstract":"Get started with the Zig programming language. Zig is a general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.","accessed":{"date-parts":[["2024",3,2]]},"citation-key":"WelcomeZigGuide2024","issued":{"date-parts":[["2024",1,7]]},"language":"english","title":"Welcome | zig.guide","type":"webpage","URL":"https://zig.guide/"},
  {"id":"WhatAreYou2023","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"WhatAreYou2023","container-title":"r/Zig","genre":"Reddit Post","issued":{"date-parts":[["2023",10,14]]},"title":"What are you doing for async?","type":"post","URL":"www.reddit.com/r/Zig/comments/177e4cb/what_are_you_doing_for_async/"},
  {"id":"WhatZigColorblind","abstract":"An introduction to Zig's curious concurrent programming API.","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"WhatZigColorblind","language":"en","title":"What is Zig's “Colorblind” Async/Await?","type":"webpage","URL":"https://kristoff.it/blog/zig-colorblind-async-await/"},
  {"id":"xlrgAnswerWhatDifference2017","accessed":{"date-parts":[["2024",5,31]]},"author":[{"family":"xlrg","given":""}],"citation-key":"xlrgAnswerWhatDifference2017","container-title":"Stack Overflow","issued":{"date-parts":[["2017",4,6]]},"title":"Answer to \"What is the difference between asymmetric and symmetric coroutines?\"","title-short":"Answer to \"What is the difference between asymmetric and symmetric coroutines?","type":"post","URL":"https://stackoverflow.com/a/43248386"},
  {"id":"ZigBits0x4","abstract":"FOSS • Linux • Programming","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"ZigBits0x4","language":"en","title":"Zig Bits 0x4: Building an HTTP client/server from scratch - Orhun's Blog","title-short":"Zig Bits 0x4","type":"webpage","URL":"https://blog.orhun.dev"},
  {"id":"ZiglangZig2024","abstract":"General-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.","accessed":{"date-parts":[["2024",3,2]]},"citation-key":"ZiglangZig2024","issued":{"date-parts":[["2024",3,2]]},"original-date":{"date-parts":[["2015",8,6]]},"publisher":"Zig Programming Language","title":"Ziglang/zig","type":"software","URL":"https://github.com/ziglang/zig"},
  {"id":"ZigMetaprogrammingGamedev","accessed":{"date-parts":[["2024",3,19]]},"citation-key":"ZigMetaprogrammingGamedev","title":"Zig Metaprogramming - Gamedev Guide","type":"webpage","URL":"https://ikrima.dev/dev-notes/zig/zig-metaprogramming/"},
  {"id":"ZigNamingConventions","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"ZigNamingConventions","title":"Zig naming conventions","type":"webpage","URL":"https://nathancraddock.com/blog/zig-naming-conventions/"},
  {"id":"ZigPackageManager2023","abstract":"The power hack and complexity of Package Manager in Zig     Ed Yu (@edyu on Github and @edyu on...","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"ZigPackageManager2023","container-title":"Zig NEWS","issued":{"date-parts":[["2023",6,27]]},"language":"en","title":"Zig Package Manager - WTF is Zon","type":"webpage","URL":"https://zig.news/edyu/zig-package-manager-wtf-is-zon-558e"},
  {"id":"ZigPackageManager2023a","abstract":"The power hack and complexity of Package Manager in Zig 0.11.0     Ed Yu (@edyu on Github and @edyu...","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"ZigPackageManager2023a","container-title":"Zig NEWS","issued":{"date-parts":[["2023",10,19]]},"language":"en","title":"Zig Package Manager 2 - WTF is Build.Zig.Zon and Build.Zig (0.11.0 Update)","type":"webpage","URL":"https://zig.news/edyu/zig-package-manager-wtf-is-zon-2-0110-update-1jo3"},
  {"id":"ZigzapZap2024","abstract":"blazingly fast backends in zig","accessed":{"date-parts":[["2024",5,31]]},"citation-key":"ZigzapZap2024","genre":"C","issued":{"date-parts":[["2024",5,31]]},"license":"MIT","original-date":{"date-parts":[["2023",1,12]]},"publisher":"ZAP","source":"GitHub","title":"zigzap/zap","type":"software","URL":"https://github.com/zigzap/zap"}
]
